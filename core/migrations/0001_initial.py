# Generated by Django 5.2.4 on 2025-07-14 11:57

import django.db.models.deletion
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('page_name', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('country_code', models.CharField(blank=True, max_length=255, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referer', models.TextField(blank=True, null=True)),
                ('request_path', models.URLField(blank=True, max_length=2000, null=True)),
                ('headers', models.JSONField(blank=True, null=True)),
                ('ip_json', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Access Log',
                'verbose_name_plural': 'Access Log',
                'db_table': 'access_logs',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(max_length=255)),
                ('user_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('data', tinymce.models.HTMLField(blank=True, null=True)),
                ('error', tinymce.models.HTMLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Log',
                'db_table': 'email_logs',
            },
        ),
        migrations.CreateModel(
            name='SiteInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_title', models.CharField(blank=True, max_length=70, null=True)),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('brand_name', models.CharField(blank=True, max_length=255, null=True)),
                ('site_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Site Name')),
                ('site_url', models.URLField(blank=True, max_length=2000, null=True, verbose_name='Site URL')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('hotline', models.CharField(blank=True, max_length=15, null=True, verbose_name='Hotline')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('zipcode', models.CharField(blank=True, max_length=31, null=True, verbose_name='Zipcode')),
                ('support', models.CharField(blank=True, max_length=15, null=True, verbose_name='Support')),
                ('facebook_link', models.URLField(blank=True, max_length=2000, null=True, verbose_name='Facebook')),
                ('youtube_link', models.URLField(blank=True, max_length=2000, null=True, verbose_name='Youtube')),
                ('tiktok_link', models.URLField(blank=True, max_length=2000, null=True, verbose_name='Tiktok')),
                ('x_link', models.URLField(blank=True, max_length=2000, null=True, verbose_name='X (Twitter)')),
                ('linkedin_link', models.URLField(blank=True, max_length=2000, null=True, verbose_name='LinkedIn')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site_imgs/', verbose_name='Logo Image')),
                ('thumb_img', models.ImageField(blank=True, null=True, upload_to='site_imgs', verbose_name='Thumb Image')),
                ('favicon', models.FileField(blank=True, null=True, upload_to='site_imgs', verbose_name='Favicon Icon')),
            ],
            options={
                'verbose_name': 'Site Info',
                'verbose_name_plural': 'Site Info',
                'db_table': 'site_info',
                'ordering': ['site_name', 'email', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fullname', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('gender', models.SmallIntegerField(choices=[(0, 'Male'), (1, 'Female')], default=0)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, max_length=2000, null=True)),
                ('zalo', models.URLField(blank=True, max_length=2000, null=True)),
                ('age', models.SmallIntegerField(default=18)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='HomeSlide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_imgs/', verbose_name='Image')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.siteinfo', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Slide',
                'verbose_name_plural': 'Slide',
                'db_table': 'site_media',
            },
        ),
    ]
